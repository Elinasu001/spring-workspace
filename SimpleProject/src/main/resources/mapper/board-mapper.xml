<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kh.spring.board.model.mapper.BoardMapper"> <!-- BoardMapper의 fullClass명을 작성해준다. -->

	<!-- findAll,findByBoardNo 증복 코드  -->
	<sql id="boardColumn"> <!--  , 를 앞에 다는 이유는 뒤에다가 놓으면 값을 적어야 하기 때문 -->
		SELECT
			   BOARD_NO boardNo
			 , BOARD_TITLE boardTitle
			 , BOARD_WRITER boardWriter
			 , COUNT
			 , TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') as createDate
			 , CHANGE_NAME changeName
	</sql>
	<!-- 중복 제거 설명용 -->
	<!-- 
	<sql id="fragment">
		AND
	          C = C
	</sql>
	
	<select>
		SELECT
		       A
		 FROM 
		       A
		WHERE
		      <include refid="fragment"/> 신텍스에러남
	</select>
	<select>
		SELECT
		       B
		 FROM 
		       B
		WHERE
		      1 = 1
		      <include refid="fragment"/> 신텍스 에러나니 비교연산자 1과 1이 같니 ? true를 넣는다 꽤 많다 : 작업할 때 편할려고
	</select>
	 -->
	
	<!-- 조회수 -->
	<select id="selectTotalCount" resultType="_int">
		SELECT
		       COUNT(*)
		 FROM
		       BOARD
		WHERE
		       STATUS = 'Y'
	</select>
	
	<!-- 게시글 리스트 조회 -->
	<select id="findAll" resultType="boarddto">
		<include refid="boardColumn"/> <!-- 중복 -->
	     FROM
	           BOARD
	    WHERE 
	           STATUS = 'Y'
	    ORDER
	       BY
	           BOARD_NO DESC
	</select>
	
	<!-- 게시글 등록하기 -->
	<insert id="save" parameterType="boarddto">
		INSERT
		  INTO
		       BOARD
		VALUES
			  (
			  SEQ_BNO.NEXTVAL
			, #{boardTitle}
			, #{boardWriter}
			, #{boardContent}
			, #{originName}
			, #{changeName}
			, 0
			, DEFAULT
			, DEFAULT
			  ) 
	</insert>
	
	<!-- 조회수 증가 -->
	<update id="increaseCount">
		UPDATE
		       BOARD
		  SET
		       COUNT = COUNT + 1
		WHERE
		       BOARD_NO = #{boardNo}
		  AND
		       STATUS = 'Y'
	</update>
	
	<!-- 게시글 BOARD_NO로 상세조회 -->
	<select id="findByBoardNo" parameterType="long" resultType="boarddto">
			  <include refid="boardColumn"/> <!-- 중복 -->
			, BOARD_CONTENT boardContent
			, ORIGIN_NAME originName
	    FROM
	         BOARD
	   WHERE
	         BOARD_NO = #{boardNo}
	     AND
	         STATUS = 'Y'
	</select>
	
	<resultMap id="boardResultSet" type="boarddto">
		<id column="boardNo" property="boardNo"/>
		<result column="boardTitle" property="boardTitle"/>
		<result column="boardWriter" property="boardWriter"/>
		<result column="boardCreateDate" property="createDate"/>
		<result column="boardContent" property="boardContent"/>
		<result column="originName" property="originName"/>
		<result column="changeName" property="changeName"/>
		<collection property="replies" ofType="replydto">
			<id column="replyNo" property="replyNo"/>
			<result column="replyContent" property="replyContent"/>
			<result column="replyWriter" property="replyWriter"/>
			<result column="replyCreateDate" property="createDate"/>
		</collection>
	</resultMap>
	
	<!-- 게시글 BOARD_NO로 상세조회 및 댓글달기 -->
	<select id="findBoardAndReply" parameterType="long" resultMap="boardResultSet">
		SELECT
		       BOARD_NO boardNo
		     , BOARD_TITLE boardTitle
		     , BOARD_CONTENT boardContent
		     , BOARD_WRITER boardWriter
		     , BOARD.CREATE_DATE boardCreateDate
		     , ORIGIN_NAME originName
		     , CHANGE_NAME changeName
		     , REPLY_NO replyNo
		     , REPLY_WRITER replyWrtier
		     , REPLY_CONTENT replyContent
		     , REPLY.CREATE_DATE replyCreateDate
		 FROM
		       BOARD
		 LEFT
		 JOIN
		       REPLY ON(BOARD_NO = REF_BNO)
		WHERE
		       BOARD_NO = #{boardNo}
	</select>
	
	
</mapper>